//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroup) DeepCopyInto(out *PortGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroup.
func (in *PortGroup) DeepCopy() *PortGroup {
	if in == nil {
		return nil
	}
	out := new(PortGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PortGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupInitParameters) DeepCopyInto(out *PortGroupInitParameters) {
	*out = *in
	if in.ActiveNics != nil {
		in, out := &in.ActiveNics, &out.ActiveNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowForgedTransmits != nil {
		in, out := &in.AllowForgedTransmits, &out.AllowForgedTransmits
		*out = new(bool)
		**out = **in
	}
	if in.AllowMacChanges != nil {
		in, out := &in.AllowMacChanges, &out.AllowMacChanges
		*out = new(bool)
		**out = **in
	}
	if in.AllowPromiscuous != nil {
		in, out := &in.AllowPromiscuous, &out.AllowPromiscuous
		*out = new(bool)
		**out = **in
	}
	if in.CheckBeacon != nil {
		in, out := &in.CheckBeacon, &out.CheckBeacon
		*out = new(bool)
		**out = **in
	}
	if in.Failback != nil {
		in, out := &in.Failback, &out.Failback
		*out = new(bool)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.NotifySwitches != nil {
		in, out := &in.NotifySwitches, &out.NotifySwitches
		*out = new(bool)
		**out = **in
	}
	if in.ShapingAverageBandwidth != nil {
		in, out := &in.ShapingAverageBandwidth, &out.ShapingAverageBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.ShapingBurstSize != nil {
		in, out := &in.ShapingBurstSize, &out.ShapingBurstSize
		*out = new(float64)
		**out = **in
	}
	if in.ShapingEnabled != nil {
		in, out := &in.ShapingEnabled, &out.ShapingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShapingPeakBandwidth != nil {
		in, out := &in.ShapingPeakBandwidth, &out.ShapingPeakBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.StandbyNics != nil {
		in, out := &in.StandbyNics, &out.StandbyNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamingPolicy != nil {
		in, out := &in.TeamingPolicy, &out.TeamingPolicy
		*out = new(string)
		**out = **in
	}
	if in.VirtualSwitchName != nil {
		in, out := &in.VirtualSwitchName, &out.VirtualSwitchName
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupInitParameters.
func (in *PortGroupInitParameters) DeepCopy() *PortGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PortGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupList) DeepCopyInto(out *PortGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PortGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupList.
func (in *PortGroupList) DeepCopy() *PortGroupList {
	if in == nil {
		return nil
	}
	out := new(PortGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PortGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupObservation) DeepCopyInto(out *PortGroupObservation) {
	*out = *in
	if in.ActiveNics != nil {
		in, out := &in.ActiveNics, &out.ActiveNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowForgedTransmits != nil {
		in, out := &in.AllowForgedTransmits, &out.AllowForgedTransmits
		*out = new(bool)
		**out = **in
	}
	if in.AllowMacChanges != nil {
		in, out := &in.AllowMacChanges, &out.AllowMacChanges
		*out = new(bool)
		**out = **in
	}
	if in.AllowPromiscuous != nil {
		in, out := &in.AllowPromiscuous, &out.AllowPromiscuous
		*out = new(bool)
		**out = **in
	}
	if in.CheckBeacon != nil {
		in, out := &in.CheckBeacon, &out.CheckBeacon
		*out = new(bool)
		**out = **in
	}
	if in.ComputedPolicy != nil {
		in, out := &in.ComputedPolicy, &out.ComputedPolicy
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Failback != nil {
		in, out := &in.Failback, &out.Failback
		*out = new(bool)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.NotifySwitches != nil {
		in, out := &in.NotifySwitches, &out.NotifySwitches
		*out = new(bool)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShapingAverageBandwidth != nil {
		in, out := &in.ShapingAverageBandwidth, &out.ShapingAverageBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.ShapingBurstSize != nil {
		in, out := &in.ShapingBurstSize, &out.ShapingBurstSize
		*out = new(float64)
		**out = **in
	}
	if in.ShapingEnabled != nil {
		in, out := &in.ShapingEnabled, &out.ShapingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShapingPeakBandwidth != nil {
		in, out := &in.ShapingPeakBandwidth, &out.ShapingPeakBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.StandbyNics != nil {
		in, out := &in.StandbyNics, &out.StandbyNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamingPolicy != nil {
		in, out := &in.TeamingPolicy, &out.TeamingPolicy
		*out = new(string)
		**out = **in
	}
	if in.VirtualSwitchName != nil {
		in, out := &in.VirtualSwitchName, &out.VirtualSwitchName
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupObservation.
func (in *PortGroupObservation) DeepCopy() *PortGroupObservation {
	if in == nil {
		return nil
	}
	out := new(PortGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupParameters) DeepCopyInto(out *PortGroupParameters) {
	*out = *in
	if in.ActiveNics != nil {
		in, out := &in.ActiveNics, &out.ActiveNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowForgedTransmits != nil {
		in, out := &in.AllowForgedTransmits, &out.AllowForgedTransmits
		*out = new(bool)
		**out = **in
	}
	if in.AllowMacChanges != nil {
		in, out := &in.AllowMacChanges, &out.AllowMacChanges
		*out = new(bool)
		**out = **in
	}
	if in.AllowPromiscuous != nil {
		in, out := &in.AllowPromiscuous, &out.AllowPromiscuous
		*out = new(bool)
		**out = **in
	}
	if in.CheckBeacon != nil {
		in, out := &in.CheckBeacon, &out.CheckBeacon
		*out = new(bool)
		**out = **in
	}
	if in.Failback != nil {
		in, out := &in.Failback, &out.Failback
		*out = new(bool)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.NotifySwitches != nil {
		in, out := &in.NotifySwitches, &out.NotifySwitches
		*out = new(bool)
		**out = **in
	}
	if in.ShapingAverageBandwidth != nil {
		in, out := &in.ShapingAverageBandwidth, &out.ShapingAverageBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.ShapingBurstSize != nil {
		in, out := &in.ShapingBurstSize, &out.ShapingBurstSize
		*out = new(float64)
		**out = **in
	}
	if in.ShapingEnabled != nil {
		in, out := &in.ShapingEnabled, &out.ShapingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShapingPeakBandwidth != nil {
		in, out := &in.ShapingPeakBandwidth, &out.ShapingPeakBandwidth
		*out = new(float64)
		**out = **in
	}
	if in.StandbyNics != nil {
		in, out := &in.StandbyNics, &out.StandbyNics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamingPolicy != nil {
		in, out := &in.TeamingPolicy, &out.TeamingPolicy
		*out = new(string)
		**out = **in
	}
	if in.VirtualSwitchName != nil {
		in, out := &in.VirtualSwitchName, &out.VirtualSwitchName
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupParameters.
func (in *PortGroupParameters) DeepCopy() *PortGroupParameters {
	if in == nil {
		return nil
	}
	out := new(PortGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupSpec) DeepCopyInto(out *PortGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupSpec.
func (in *PortGroupSpec) DeepCopy() *PortGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PortGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortGroupStatus) DeepCopyInto(out *PortGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortGroupStatus.
func (in *PortGroupStatus) DeepCopy() *PortGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PortGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsInitParameters) DeepCopyInto(out *PortsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsInitParameters.
func (in *PortsInitParameters) DeepCopy() *PortsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PortsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsObservation) DeepCopyInto(out *PortsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.MacAddresses != nil {
		in, out := &in.MacAddresses, &out.MacAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsObservation.
func (in *PortsObservation) DeepCopy() *PortsObservation {
	if in == nil {
		return nil
	}
	out := new(PortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsParameters) DeepCopyInto(out *PortsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsParameters.
func (in *PortsParameters) DeepCopy() *PortsParameters {
	if in == nil {
		return nil
	}
	out := new(PortsParameters)
	in.DeepCopyInto(out)
	return out
}
