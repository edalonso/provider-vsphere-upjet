// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostOverrideInitParameters struct {

	// The managed object reference
	// ID of the cluster to put the override in.  Forces a new
	// resource if changed.
	// The managed object ID of the cluster.
	ComputeClusterID *string `json:"computeClusterId,omitempty" tf:"compute_cluster_id,omitempty"`

	// The automation level for host power
	// operations on this host. Can be one of manual or automated. Default:
	// manual.
	// The automation level for power operations on this host. Can be one of manual or automated.
	DpmAutomationLevel *string `json:"dpmAutomationLevel,omitempty" tf:"dpm_automation_level,omitempty"`

	// Enable DPM support for this host. Default:
	// false.
	// Enable DPM for this host.
	DpmEnabled *bool `json:"dpmEnabled,omitempty" tf:"dpm_enabled,omitempty"`

	// The managed object ID of the host.
	HostSystemID *string `json:"hostSystemId,omitempty" tf:"host_system_id,omitempty"`
}

type HostOverrideObservation struct {

	// The managed object reference
	// ID of the cluster to put the override in.  Forces a new
	// resource if changed.
	// The managed object ID of the cluster.
	ComputeClusterID *string `json:"computeClusterId,omitempty" tf:"compute_cluster_id,omitempty"`

	// The automation level for host power
	// operations on this host. Can be one of manual or automated. Default:
	// manual.
	// The automation level for power operations on this host. Can be one of manual or automated.
	DpmAutomationLevel *string `json:"dpmAutomationLevel,omitempty" tf:"dpm_automation_level,omitempty"`

	// Enable DPM support for this host. Default:
	// false.
	// Enable DPM for this host.
	DpmEnabled *bool `json:"dpmEnabled,omitempty" tf:"dpm_enabled,omitempty"`

	// The managed object ID of the host.
	HostSystemID *string `json:"hostSystemId,omitempty" tf:"host_system_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type HostOverrideParameters struct {

	// The managed object reference
	// ID of the cluster to put the override in.  Forces a new
	// resource if changed.
	// The managed object ID of the cluster.
	// +kubebuilder:validation:Optional
	ComputeClusterID *string `json:"computeClusterId,omitempty" tf:"compute_cluster_id,omitempty"`

	// The automation level for host power
	// operations on this host. Can be one of manual or automated. Default:
	// manual.
	// The automation level for power operations on this host. Can be one of manual or automated.
	// +kubebuilder:validation:Optional
	DpmAutomationLevel *string `json:"dpmAutomationLevel,omitempty" tf:"dpm_automation_level,omitempty"`

	// Enable DPM support for this host. Default:
	// false.
	// Enable DPM for this host.
	// +kubebuilder:validation:Optional
	DpmEnabled *bool `json:"dpmEnabled,omitempty" tf:"dpm_enabled,omitempty"`

	// The managed object ID of the host.
	// +kubebuilder:validation:Optional
	HostSystemID *string `json:"hostSystemId,omitempty" tf:"host_system_id,omitempty"`
}

// HostOverrideSpec defines the desired state of HostOverride
type HostOverrideSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostOverrideParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostOverrideInitParameters `json:"initProvider,omitempty"`
}

// HostOverrideStatus defines the observed state of HostOverride.
type HostOverrideStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostOverrideObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HostOverride is the Schema for the HostOverrides API. Provides a VMware vSphere DPM host override resource. This can be used to override power management settings for a host in a cluster.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vsphere-upjet}
type HostOverride struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.computeClusterId) || (has(self.initProvider) && has(self.initProvider.computeClusterId))",message="spec.forProvider.computeClusterId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostSystemId) || (has(self.initProvider) && has(self.initProvider.hostSystemId))",message="spec.forProvider.hostSystemId is a required parameter"
	Spec   HostOverrideSpec   `json:"spec"`
	Status HostOverrideStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostOverrideList contains a list of HostOverrides
type HostOverrideList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostOverride `json:"items"`
}

// Repository type metadata.
var (
	HostOverride_Kind             = "HostOverride"
	HostOverride_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostOverride_Kind}.String()
	HostOverride_KindAPIVersion   = HostOverride_Kind + "." + CRDGroupVersion.String()
	HostOverride_GroupVersionKind = CRDGroupVersion.WithKind(HostOverride_Kind)
)

func init() {
	SchemeBuilder.Register(&HostOverride{}, &HostOverrideList{})
}
